typedef long long ll;
const ll MOD = 1000000007;

ll fastpow(ll x, ll y){
	ll curr = 1, curr_pow = x, curr_mask = 1;

	while(curr_mask <= y){
		if(y & curr_mask){
			curr = (curr * curr_pow) % MOD;
		}

		curr_pow = (curr_pow * curr_pow) % MOD;
		curr_mask <<= 1;
	}

	return curr;
}

#define INVERSE(x) (fastpow((x), (MOD - 2)))

#define M_ADD(x, y) ((((x) % (MOD)) + ((y) % (MOD))) % (MOD))
#define M_SUB(x, y) ((((x) % (MOD)) - ((y) % (MOD))) % (MOD))
#define M_MUL(x, y) ((((x) % (MOD)) * ((y) % (MOD))) % (MOD))
#define M_DIV(x, y) ((((x) % (MOD)) * (INVERSE(y))) % (MOD))