struct ed{
	int v, w;

	ed(int v0, int w0) : v(v0), w(w0){}
	ed() : v(-1), w(-1){}

	friend bool operator<(const ed &a, const ed &b){
		return a.w > b.w;
	}
};

const int MAX = 20001, MV = 0x3f3f3f3f;
int n, m,
	dist[MAX];
vector<ed> matrix[MAX];

void dijkstra(vector<ed> matrix[MAX], int *dis, int begin){
	priority_queue<ed> nextt;

	nextt.emplace(begin, 0);
	dis[begin] = 0;

	while(!nextt.empty()){
		ed curr = nextt.top();
		nextt.pop();

		if(curr.w > dis[curr.v]){
			continue;
		}

		for(ed adj : matrix[curr.v]){
			int alt = curr.w + adj.w;

			if(alt < dis[adj.v]){
				dis[adj.v] = alt;
				nextt.emplace(adj.v, alt);
			}
		}
	}
}

memset(dist, 0x3f, sizeof(dist));
dijkstra(matrix, dist, 1);