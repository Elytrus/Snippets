struct disjoint{
	int set[MAX], ranks[MAX], size;

	disjoint(int sz){
		size = sz;
		for(int i = 0; i < size; i++){
			set[i] = i;
		}
		fill(ranks, ranks + sz, 1);
	}

	int root(int val){
		if(set[val] == val){
			return val;
		}
		return root(set[val]);
	}

	void unite(int v1, int v2){
		v1 = root(v1);
		v2 = root(v2);

		if(ranks[v1] < ranks[v2]){
			set[v1] = v2;
		}
		else if(ranks[v1] > ranks[v2]){
			set[v2] = v1;
		}
		else{
			set[v2] = v1;
			ranks[v1]++;
		}
	}

	bool same(int v1, int v2){
		return root(v1) == root(v2);
	}
};